#!/bin/sh

# Take external storage definitions from environment variable. This is expected
# to be a string of the format "<storage-name>:<storage-path>", for example
#
# documents:/mnt/documents music:/mnt/music
#
# Whitespace may be used to separate each storage location config.
#
EXTERNAL_STORAGES="${EXTERNAL_STORAGES}"

# STAGE 1: PRE-INSTALL #########################################################

# Wait for database server to be ready, if necessary
if [ "${DB_TYPE}" != "sqlite3" ] ; then
    while [ "$(nc -z "${DB_HOST}" "${DB_PORT}" ; echo "$?")" -ne 0 ] ; do
        2> echo "Waiting for ${DB_TYPE} database to be ready..."
        sleep 2
    done
fi

# STAGE 2: INSTALL #############################################################

# Do the base install
/usr/local/bin/nextcloud-install

# STAGE 3: POST-INSTALL CONFIG #################################################


# Create a backup of the default config
[ -f /var/lib/nextcloud/config/config.php.default ] || \
    cp -p /var/lib/nextcloud/config/config.php \
        /var/lib/nextcloud/config/config.php.default

#
# Replace the default config with our own templated config, keeping any
# auto-generated values like instance id and password salt etc.
#
/usr/local/bin/nextcloud-config

# STAGE 4: POST-CONFIG BOOTSTRAP ###############################################

# Do upgrade, if required
occ upgrade

# Enable 'External Storage' plugin
occ app:enable files_external

# Enable 'Files Move' plugin
occ app:enable files_mv

# Create requested external storage locations, if they don't already exist
storage_info="$(occ files_external:list --all --full | \
        tail -n +4 | head -n -1 | \
        sed -E -e 's#[|]##g' \
               -e 's#\s\s+#|#g' \
               -e 's#^\s##g' \
               -e 's#,$##g' \
               -e 's#[\][/]#/#g')"
for storage in ${EXTERNAL_STORAGES} ; do
    storage_name="$(echo "${storage}" | cut -d: -f1)"
    storage_dir="$(echo "${storage}" | cut -d: -f2)"
    if printf "%s" "${storage_info}" | grep "${storage_name}" > /dev/null ; then
        echo "External storage '${storage_name}' already exists."
    else
        echo "Adding external storage '${storage_name}'..."
        occ files_external:create \
            --config datadir="${storage_dir}" \
            "${storage_name}" \
            'local' null::null
    fi
done

# Add a wildcard record for allowed domains
occ config:system:set trusted_domains 1 --value="*"

# Rescan file system
occ files:scan --all &
